Object { status: Getter, fetchStatus: Getter, isLoading: Getter, isSuccess: Getter, isError: Getter, isInitialLoading: Getter, data: Getter, dataUpdatedAt: Getter, error: Getter, errorUpdatedAt: Getter, ‚Ä¶ }
StartPage.tsx:49:11
prompts remaining
Object { status: Getter, fetchStatus: Getter, isLoading: Getter, isSuccess: Getter, isError: Getter, isInitialLoading: Getter, data: Getter, dataUpdatedAt: Getter, error: Getter, errorUpdatedAt: Getter, ‚Ä¶ }
WebSocket connection closed:
close { target: WebSocket, isTrusted: true, wasClean: true, code: 1005, reason: "", srcElement: WebSocket, currentTarget: WebSocket, eventPhase: 2, bubbles: false, cancelable: false, ‚Ä¶ }
Flow.tsx:174:15
Warning: React does not recognize the `flowNodes` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `flownodes` instead. If you accidentally passed it from a parent component, remove it from the DOM element. Component Stack:
div unknown:0
ReactFlow index.js:3732
div unknown:0
Flow Flow.tsx:246
ReactFlowProvider index.js:3673
FlowProvider unknown:0
div unknown:0
FocusedContextProvider FocusedContext.tsx:39
GraphPage GraphPage.tsx:398
div unknown:0
CoreStuff App.tsx:14
RenderedRoute hooks.tsx:624
RenderErrorBoundary hooks.tsx:550
DataRoutes components.tsx:135
Router components.tsx:334
RouterProvider components.tsx:63
App unknown:0
QueryClientProvider QueryClientProvider.tsx:71
<anonymous code>:1:145535
overrideMethod <anonymous code>:1
React 19
onSubmitPrompt App.tsx:51
submitPrompt StartPage.tsx:71
onClick StartPage.tsx:206
React 23
<anonymous> main.tsx:26
Warning: React does not recognize the `flowEdges` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `flowedges` instead. If you accidentally passed it from a parent component, remove it from the DOM element. Component Stack:
div unknown:0
ReactFlow index.js:3732
div unknown:0
Flow Flow.tsx:246
ReactFlowProvider index.js:3673
FlowProvider unknown:0
div unknown:0
FocusedContextProvider FocusedContext.tsx:39
GraphPage GraphPage.tsx:398
div unknown:0
CoreStuff App.tsx:14
RenderedRoute hooks.tsx:624
RenderErrorBoundary hooks.tsx:550
DataRoutes components.tsx:135
Router components.tsx:334
RouterProvider components.tsx:63
App unknown:0
QueryClientProvider QueryClientProvider.tsx:71
<anonymous code>:1:145535
Warning: React does not recognize the `nodeDims` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `nodedims` instead. If you accidentally passed it from a parent component, remove it from the DOM element. Component Stack:
div unknown:0
ReactFlow index.js:3732
div unknown:0
Flow Flow.tsx:246
ReactFlowProvider index.js:3673
FlowProvider unknown:0
div unknown:0
FocusedContextProvider FocusedContext.tsx:39
GraphPage GraphPage.tsx:398
div unknown:0
CoreStuff App.tsx:14
RenderedRoute hooks.tsx:624
RenderErrorBoundary hooks.tsx:550
DataRoutes components.tsx:135
Router components.tsx:334
RouterProvider components.tsx:63
App unknown:0
QueryClientProvider QueryClientProvider.tsx:71
<anonymous code>:1:145535
Warning: React does not recognize the `deleteBranch` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `deletebranch` instead. If you accidentally passed it from a parent component, remove it from the DOM element. Component Stack:
div unknown:0
ReactFlow index.js:3732
div unknown:0
Flow Flow.tsx:246
ReactFlowProvider index.js:3673
FlowProvider unknown:0
div unknown:0
FocusedContextProvider FocusedContext.tsx:39
GraphPage GraphPage.tsx:398
div unknown:0
CoreStuff App.tsx:14
RenderedRoute hooks.tsx:624
RenderErrorBoundary hooks.tsx:550
DataRoutes components.tsx:135
Router components.tsx:334
RouterProvider components.tsx:63
App unknown:0
QueryClientProvider QueryClientProvider.tsx:71
<anonymous code>:1:145535
Popped from queue
Array [ "0" ]
GraphPage.tsx:124:13
Popped from queue
Array [ "0" ]
GraphPage.tsx:124:13
Document written with ID:  L0tyoPaywiJhCwxHq3m8 StartPage.tsx:75:15
undefined Layout Check - Node: a-0, Dagre Width: 250, Dagre Height: 170 Flow.tsx:64:15
undefined Layout Check - Node: a-0, Dagre Width: 250, Dagre Height: 170 undefined Layout Check - Node: a-0, Dagre Width: 250, Dagre Height: 170 Flow.tsx:64:15
undefined Layout Check - Node: a-0, Dagre Width: 250, Dagre Height: 170 Warning: Invalid DOM property `stroke-linecap`. Did you mean `strokeLinecap`? Component Stack:
polyline unknown:0
marker unknown:0
defs unknown:0
g unknown:0
DeletableEdge DeletableEdge.tsx:34
g unknown:0
EdgeWrapper index.js:1230
g unknown:0
svg unknown:0
EdgeRenderer index.js:3257
div unknown:0
Viewport index.js:3298
div unknown:0
Pane index.js:2877
div unknown:0
ZoomPane index.js:2510
FlowRenderer index.js:3046
GraphView index.js:3397
Wrapper index.js:3682
div unknown:0
ReactFlow index.js:3732
div unknown:0
Flow Flow.tsx:246
ReactFlowProvider index.js:3673
FlowProvider unknown:0
div unknown:0
FocusedContextProvider FocusedContext.tsx:39
GraphPage GraphPage.tsx:398
div unknown:0
CoreStuff App.tsx:14
RenderedRoute hooks.tsx:624
RenderErrorBoundary hooks.tsx:550
DataRoutes components.tsx:135
Router components.tsx:334
RouterProvider components.tsx:63
App unknown:0
QueryClientProvider QueryClientProvider.tsx:71
<anonymous code>:1:145535
Warning: Invalid DOM property `stroke-linejoin`. Did you mean `strokeLinejoin`? Component Stack:
polyline unknown:0
marker unknown:0
defs unknown:0
g unknown:0
DeletableEdge DeletableEdge.tsx:34
g unknown:0
EdgeWrapper index.js:1230
g unknown:0
svg unknown:0
EdgeRenderer index.js:3257
div unknown:0
Viewport index.js:3298
div unknown:0
Pane index.js:2877
div unknown:0
ZoomPane index.js:2510
FlowRenderer index.js:3046
GraphView index.js:3397
Wrapper index.js:3682
div unknown:0
ReactFlow index.js:3732
div unknown:0
Flow Flow.tsx:246
ReactFlowProvider index.js:3673
FlowProvider unknown:0
div unknown:0
FocusedContextProvider FocusedContext.tsx:39
GraphPage GraphPage.tsx:398
div unknown:0
CoreStuff App.tsx:14
RenderedRoute hooks.tsx:624
RenderErrorBoundary hooks.tsx:550
DataRoutes components.tsx:135
Router components.tsx:334
RouterProvider components.tsx:63
App unknown:0
QueryClientProvider QueryClientProvider.tsx:71
<anonymous code>:1:145535
Warning: Invalid DOM property `stroke-width`. Did you mean `strokeWidth`? Component Stack:
polyline unknown:0
marker unknown:0
defs unknown:0
g unknown:0
DeletableEdge DeletableEdge.tsx:34
g unknown:0
EdgeWrapper index.js:1230
g unknown:0
svg unknown:0
EdgeRenderer index.js:3257
div unknown:0
Viewport index.js:3298
div unknown:0
Pane index.js:2877
div unknown:0
ZoomPane index.js:2510
FlowRenderer index.js:3046
GraphView index.js:3397
Wrapper index.js:3682
div unknown:0
ReactFlow index.js:3732
div unknown:0
Flow Flow.tsx:246
ReactFlowProvider index.js:3673
FlowProvider unknown:0
div unknown:0
FocusedContextProvider FocusedContext.tsx:39
GraphPage GraphPage.tsx:398
div unknown:0
CoreStuff App.tsx:14
RenderedRoute hooks.tsx:624
RenderErrorBoundary hooks.tsx:550
DataRoutes components.tsx:135
Router components.tsx:334
RouterProvider components.tsx:63
App unknown:0
QueryClientProvider QueryClientProvider.tsx:71
<anonymous code>:1:145535
Length of answer for node 0: 1600 GraphPage.tsx:149:13
GET
ws://localhost:6823/ws?fp=4068eb72037efdb3f3b06ab52b635e6b
[HTTP/1.1 101 Switching Protocols 4ms]
WebSocket connection closed:
close { target: WebSocket, isTrusted: true, wasClean: true, code: 1005, reason: "", srcElement: WebSocket, currentTarget: WebSocket, eventPhase: 2, bubbles: false, cancelable: false, ‚Ä¶ }
Flow.tsx:174:15
Stream has ended Flow.tsx:162:17
Complete answer for node 0: ## Reasons for Collective Decision-Making in Foraging
Certain species of animals exhibit collective decision-making behaviors in their foraging strategies due to several key factors:
1. **Increased Efficiency**
- **Resource Locator**: Group members can share information about food sources.
- **Division of Labor**: Tasks like scouting and foraging can be divided among individuals, maximizing efficiency.
2. **Safety in Numbers**
- **Predator Avoidance**: Foraging in groups reduces an individual's risk of predation.
- **Vigilance**: Collective scanning increases the detection of threats, fostering a safer environment.
3. **Information Sharing**
- **Social Learning**: Young individuals learn foraging techniques from experienced group members.
- **Consensus Building**: Groups can weigh different options and choose collectively based on shared information.
4. **Dynamic Adaptation**
- **Environmental Changes**: Groups can quickly adapt to changes in food availability by altering their foraging strategies.
- **Trial and Error**: Collective exploration allows groups to test various foraging methods simultaneously.
5. **Reducing Competition**
- **Spatial Distribution**: Collective foraging can lead to a more equal distribution of food resources, mitigating competition among group members.
6. **Enhanced Learning**
- **Cumulative Knowledge**: Collective behaviors allow the accumulation of knowledge over generations, improving foraging strategies over time.
*Collective decision-making can significantly enhance foraging success and survival rates in various species, promoting social cohesion and efficiency.* üêæüåø GraphPage.tsx:148:13
Length of answer for node 0: 1696 GraphPage.tsx:149:13
WebSocket connection closed:
close { target: WebSocket, isTrusted: true, wasClean: true, code: 1005, reason: "", srcElement: WebSocket, currentTarget: WebSocket, eventPhase: 2, bubbles: false, cancelable: false, ‚Ä¶ }
Flow.tsx:174:15
Stream has ended Flow.tsx:162:17
Initial questions generated, pausing generator. GraphPage.tsx:395:19
WebSocket connection closed:
close { target: WebSocket, isTrusted: true, wasClean: true, code: 1005, reason: "", srcElement: WebSocket, currentTarget: WebSocket, eventPhase: 2, bubbles: false, cancelable: false, ‚Ä¶ }
Flow.tsx:174:15
GET
http://localhost:3003/assets/scissor.png
[HTTP/1.1 200 OK 3ms]
POST
https://firestore.googleapis.com/google.firestore.v1.Firestore/Write/channel?VER=8&database=projects/whybot-c40ce/databases/(default)&gsessionid=M_ojYknIyCspzepzTUCRASnE_8a7pPj3hKQavFmXWNc&SID=VeoE-LxrpRZgyQ88fnh3DA&RID=97581&TYPE=terminate&zx=ox4ab2l2qsh
[HTTP/3 200  230ms]
Source map error: request failed with status 404
Resource URL: http://localhost:3003/%3Canonymous%20code%3E
Source Map URL: installHook.js.map
Source map error: can't access property "sources", map is undefined
Resource URL: http://localhost:3003/%3Canonymous%20code%3E
Source Map URL: react_devtools_backend_compact.js.map
Source map error: No sources are declared in this source map.
Resource URL: http://localhost:3003/node_modules/.vite/deps/chunk-WQG2LZMB.js?v=c27a2d91
Source Map URL: chunk-WQG2LZMB.js.map
Source map error: No sources are declared in this source map.
Resource URL: http://localhost:3003/node_modules/.vite/deps/react.js?v=806fddb9
Source Map URL: react.js.map